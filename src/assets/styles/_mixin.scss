/* Heading */

@mixin heading-xxl {
  font-size: 56px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 2px;
  text-transform: uppercase;
}

@mixin heading-xl {
  font-size: 40px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 2px;
  text-transform: uppercase;
}
@mixin heading-l {
  font-size: 32px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 1px;
  text-transform: uppercase;
}
@mixin heading-m {
  font-size: 28px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 2px;
  text-transform: uppercase;
}
@mixin heading-s {
  font-size: 24px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 2px;
  text-transform: uppercase;
}
@mixin heading-xs {
  font-size: 18px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 1px;
  text-transform: uppercase;
}

@mixin body-overline {
  font-size: 14px;
  font-family: Manrope;
  font-weight: 400;
  letter-spacing: 10px;
  text-transform: uppercase;
}

@mixin body-subtitle {
  font-size: 13px;
  font-family: Manrope;
  font-weight: 700;
  letter-spacing: 1px;
  text-transform: uppercase;
}

@mixin body-main {
  font-size: 15px;
  font-family: Manrope;
  font-weight: 500;
  letter-spacing: 0px;
}

// DON`T TOUCH
/* Container */

@mixin container($type) {
  @each $name, $value in $grid-bp {
    @media (min-width: $value) {
      @if ($container-mw > $value) {
        @if ($value == 0px) {
          #{$type}: 0 $grid-space-side;
        } @else {
          #{$type}: 0 calc((100% - $value) / 2);
        }
      } @else {
        #{$type}: 0 calc((100% - $container-mw) / 2);
      }
    }
  }
}

/* Media */

@mixin mediaWidth($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
}

// Media query by breakpoints

@mixin forMedia($width, $value) {
  $value: map-get($media-value, $value);
  @media (#{$value}-width: $width) {
    @content;
  }
} // helper mixin for @mixin media

@mixin media($name, $value) {
  $width: map-get($grid-bp, $name);
  @include forMedia($width, $value) {
    @content;
  }
}

@mixin forMediaEach($width) {
  @media (min-width: $width) {
    @content;
  }
} // helper mixin for @each and @for (create classes for columns)
